apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cybersapient-ingress
  namespace: prod
  labels:
    app: cybersapient
  annotations:
    cert-manager.io/cluster-issuer: "cluster-letsencrypt-prod"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin,Authorization,X-CSRFToken,X-CSRF,Access-Control-Allow-Headers,X-JWT-Assertion"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - cybersapient.ddns.net
    secretName: cybersapient-tls
  rules:
  - host: cybersapient.ddns.net
    http:
      paths:
      # Backend API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: cybersapient-backend-service
            port:
              number: 5000
      # Frontend routes (catch-all)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cybersapient-frontend-service
            port:
              number: 3000